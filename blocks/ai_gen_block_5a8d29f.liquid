{% doc %}
  @prompt
    Large bold text filled with an image. Include a setting to control the background color., it must be centered 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-image-text-{{ ai_gen_id }} {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: {{ block.settings.min_height }}px;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.padding }}px;
    overflow: hidden;
    text-align: center;
    filter: blur(10px);
    opacity: 0;
    transform: scale(0.95);
    transition: filter 0.8s ease-out, opacity 0.8s ease-out, transform 0.8s ease-out;
  }

  .ai-image-text-{{ ai_gen_id }}.ai-blur-in-active {
    filter: blur(0);
    opacity: 1;
    transform: scale(1);
  }

  .ai-image-text-content-{{ ai_gen_id }} {
    position: relative;
    z-index: 2;
    text-align: center;
    max-width: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-image-text-heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    font-weight: 700;
    line-height: 1.1;
    margin: 0;
    background-image: url('{{ block.settings.fill_image | image_url: width: 2000 }}');
    background-size: {{ block.settings.image_scale }};
    background-position: {{ block.settings.image_position }};
    background-repeat: no-repeat;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    -webkit-text-fill-color: transparent;
    text-transform: {{ block.settings.text_transform }};
    letter-spacing: {{ block.settings.letter_spacing }}px;
    text-align: center;
  }

  .ai-image-text-fallback-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    font-weight: 700;
    line-height: 1.1;
    margin: 0;
    color: {{ block.settings.fallback_color }};
    text-transform: {{ block.settings.text_transform }};
    letter-spacing: {{ block.settings.letter_spacing }}px;
    display: none;
    text-align: center;
  }

  .ai-image-text-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    color: #666;
    font-size: 14px;
    text-align: center;
    pointer-events: none;
  }

  @supports not (background-clip: text) {
    .ai-image-text-heading-{{ ai_gen_id }} {
      display: none;
    }
    .ai-image-text-fallback-{{ ai_gen_id }} {
      display: block;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-image-text-heading-{{ ai_gen_id }},
    .ai-image-text-fallback-{{ ai_gen_id }} {
      font-size: {{ block.settings.text_size | times: 0.7 }}px;
    }
    
    .ai-image-text-{{ ai_gen_id }} {
      min-height: {{ block.settings.min_height | times: 0.7 }}px;
      padding: {{ block.settings.padding | times: 0.7 }}px;
    }
  }
{% endstyle %}

<div
  class="ai-image-text-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-image-text-content-{{ ai_gen_id }}">
    {% if block.settings.text != blank %}
      {% if block.settings.fill_image %}
        <h2 class="ai-image-text-heading-{{ ai_gen_id }}">{{ block.settings.text }}</h2>
        <h2 class="ai-image-text-fallback-{{ ai_gen_id }}">{{ block.settings.text }}</h2>
      {% else %}
        <h2 class="ai-image-text-fallback-{{ ai_gen_id }}" style="display: block;">{{ block.settings.text }}</h2>
      {% endif %}
    {% else %}
      <h2 class="ai-image-text-fallback-{{ ai_gen_id }}" style="display: block; color: #999;">Your bold text here</h2>
    {% endif %}
  </div>

  {% unless block.settings.fill_image %}
    <div class="ai-image-text-empty-state-{{ ai_gen_id }}">
      Next, add an image to fill the text
    </div>
  {% endunless %}
</div>

<script>
  (function() {
    const element = document.querySelector('.ai-image-text-{{ ai_gen_id }}');
    
    if (!element) return;
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('ai-blur-in-active');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.6,
      rootMargin: '0px 0px -50px 0px'
    });
    
    observer.observe(element);
  })();
</script>

{% schema %}
{
  "name": "Image filled text",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "text",
      "id": "text",
      "label": "Text",
      "default": "BOLD TEXT"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 20,
      "max": 200,
      "step": 5,
      "unit": "px",
      "label": "Text size",
      "default": 80
    },
    {
      "type": "select",
      "id": "text_transform",
      "label": "Text case",
      "options": [
        {
          "value": "none",
          "label": "Default"
        },
        {
          "value": "uppercase",
          "label": "Uppercase"
        },
        {
          "value": "lowercase",
          "label": "Lowercase"
        }
      ],
      "default": "uppercase"
    },
    {
      "type": "range",
      "id": "letter_spacing",
      "min": -2,
      "max": 10,
      "step": 0.5,
      "unit": "px",
      "label": "Letter spacing",
      "default": 2
    },
    {
      "type": "header",
      "content": "Fill image"
    },
    {
      "type": "image_picker",
      "id": "fill_image",
      "label": "Fill image"
    },
    {
      "type": "select",
      "id": "image_scale",
      "label": "Image scale",
      "options": [
        {
          "value": "cover",
          "label": "Cover"
        },
        {
          "value": "contain",
          "label": "Contain"
        },
        {
          "value": "auto",
          "label": "Original size"
        }
      ],
      "default": "cover"
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "Image position",
      "options": [
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "color",
      "id": "fallback_color",
      "label": "Fallback text color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "min_height",
      "min": 100,
      "max": 800,
      "step": 20,
      "unit": "px",
      "label": "Minimum height",
      "default": 300
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Padding",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Image filled text"
    }
  ]
}
{% endschema %}